{"remainingRequest":"F:\\Vue Practice\\Chetan\\node_modules\\thread-loader\\dist\\cjs.js!F:\\Vue Practice\\Chetan\\node_modules\\babel-loader\\lib\\index.js!F:\\Vue Practice\\Chetan\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Vue Practice\\Chetan\\src\\store\\video.js","dependencies":[{"path":"F:\\Vue Practice\\Chetan\\src\\store\\video.js","mtime":1547898078000},{"path":"F:\\Vue Practice\\Chetan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Vue Practice\\Chetan\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Vue Practice\\Chetan\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Vue Practice\\Chetan\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"F:\\\\Vue Practice\\\\Chetan\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport videos from './../data/data.json';\nvar state = {\n  videoList: [],\n  category: [],\n  listByCategory: []\n};\nvar getters = {\n  getList: function getList(state) {\n    return state.videoList;\n  },\n  category: function category(state) {\n    //eslint-disable-next-line\n    debugger;\n    return state.category;\n  }\n};\nvar mutations = {\n  getList: function getList(state, videos) {\n    state.videoList = videos;\n  },\n  category: function category(state, _category) {\n    state.category = _category;\n  },\n  getByFilter: function getByFilter(state, listByCategory) {\n    state.listByCategory = listByCategory;\n  }\n};\nvar actions = {\n  filter: function filter(_ref, payload) {\n    var commit = _ref.commit;\n    var res = this.state.video.videoList;\n\n    if (payload.category !== 'all') {\n      res = this.state.video.videoList.filter(function (item) {\n        return item.encoder === payload.category;\n      });\n    } //eslint-disable-next-line\n\n\n    debugger;\n    commit('getByFilter', res);\n  },\n  loadGallery: function loadGallery(_ref2) {\n    var commit = _ref2.commit;\n    return new _Promise(function (resolve, reject) {\n      if (!videos) {\n        reject('Failed to load video data');\n      }\n\n      commit('getList', videos);\n      resolve(videos);\n    });\n  },\n  getCategory: function getCategory(_ref3) {\n    var commit = _ref3.commit;\n    var category = this.state.video.videoList.reduce(function (preValue, currValue) {\n      preValue = preValue || [];\n      var res = preValue.some(function (e) {\n        return e === currValue.encoder;\n      }); //eslint-disable-next-line\n      //console.log(preValue, currValue, res);\n\n      if (!res) {\n        preValue.push(currValue.encoder);\n      }\n\n      return preValue;\n    }, []); //eslint-disable-next-line\n\n    console.log(category);\n    commit('category', category);\n  }\n};\nexport default {\n  namespace: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["F:\\Vue Practice\\Chetan\\src\\store\\video.js"],"names":["videos","state","videoList","category","listByCategory","getters","getList","mutations","getByFilter","actions","filter","payload","commit","res","video","item","encoder","loadGallery","resolve","reject","getCategory","reduce","preValue","currValue","some","e","push","console","log","namespace"],"mappings":"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","sourcesContent":["\nimport videos from './../data/data.json';\nconst state = {\n  videoList : [],\n  category:[],\n  listByCategory:[]\n}\nconst getters = {\n  getList : (state) =>{\n    return state.videoList;\n  },\n  category : (state) =>{\n    //eslint-disable-next-line\n    debugger;\n    return state.category;\n  }\n}\nconst mutations= {\n  getList : (state, videos) => {\n     state.videoList = videos;\n  },\n  category : (state, category)=>{\n    state.category = category;\n  },\n  getByFilter : (state, listByCategory)=>{\n    state.listByCategory = listByCategory;\n  }\n}\nconst actions ={\n  filter({commit}, payload){\n    let res = this.state.video.videoList;\n    if(payload.category !== 'all'){\n      res = this.state.video.videoList.filter(item => item.encoder === payload.category)\n    }\n    //eslint-disable-next-line\n    debugger;\n    commit('getByFilter', res);\n  },\n  loadGallery ({commit}) {\n    return new Promise((resolve, reject)=>{\n      if(!videos){\n        reject('Failed to load video data')\n      }\n      commit('getList', videos);\n      \n      resolve(videos);\n    });\n  },\n  getCategory({commit}){\n    const category = this.state.video.videoList.reduce((preValue, currValue)=>{\n      preValue = preValue || [];\n      const res = preValue.some((e)=>{ return e === currValue.encoder});\n      //eslint-disable-next-line\n      //console.log(preValue, currValue, res);\n      \n      if(!res){\n        preValue.push(currValue.encoder);\n      }\n      return preValue;\n    }, []);\n    //eslint-disable-next-line\n    console.log(category);\n    commit('category', category)\n  }\n}\nexport default {\n  namespace : true,\n  state, \n  getters, \n  actions,  mutations\n}"]}]}